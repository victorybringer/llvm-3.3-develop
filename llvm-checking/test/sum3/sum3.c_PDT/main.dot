digraph {
	graph [bb="0,0,1067,1188"];
	node [label="\N"];
	33	 [height=0.5,
		label="%n = alloca i32 , align 4",
		pos="465,1170",
		width=3.4464];
	34	 [height=0.5,
		label="%i = alloca i32 , align 4",
		pos="465,1098",
		width=3.3686];
	33 -> 34	 [pos="e,465,1116.1 465,1151.7 465,1144 465,1134.7 465,1126.1"];
	35	 [height=0.5,
		label="%sum = alloca i32 , align 4",
		pos="465,1026",
		width=3.8165];
	34 -> 35	 [pos="e,465,1044.1 465,1079.7 465,1072 465,1062.7 465,1054.1"];
	36	 [height=0.5,
		label="%1 = call i32 @printf ( i8* i8* getelementptr ( [26 x i8]* @.str ,  i32 0, i32 0 ) )",
		pos="465,954",
		width=10.513];
	35 -> 36	 [pos="e,465,972.1 465,1007.7 465,999.98 465,990.71 465,982.11"];
	40	 [height=0.5,
		label="%3 = call i32 @__isoc99_scanf ( i8* i8* getelementptr ( [3 x i8]* @.str1 ,  i32 0, i32 0 ), i32* %n )",
		pos="465,882",
		width=12.922];
	36 -> 40	 [pos="e,465,900.1 465,935.7 465,927.98 465,918.71 465,910.11"];
	43	 [height=0.5,
		label="store i32 0 , i32* %sum , align 4",
		pos="465,810",
		width=4.4748];
	40 -> 43	 [pos="e,465,828.1 465,863.7 465,855.98 465,846.71 465,838.11"];
	44	 [height=0.5,
		label="store i32 1 , i32* %i , align 4",
		pos="465,738",
		width=4.004];
	43 -> 44	 [pos="e,465,756.1 465,791.7 465,783.98 465,774.71 465,766.11"];
	45	 [height=0.5,
		label="br label %5",
		pos="513,666",
		width=1.7596];
	44 -> 45	 [pos="e,501.49,683.79 476.62,720.05 482.34,711.71 489.35,701.49 495.68,692.25"];
	47	 [height=0.5,
		label="%6 = load i32* %i , align 4",
		pos="633,594",
		width=3.7616];
	45 -> 47	 [pos="e,604.35,611.71 539.63,649.46 555.98,639.93 577.17,627.57 595.23,617.03"];
	48	 [height=0.5,
		label="%7 = load i32* %n , align 4",
		pos="633,522",
		width=3.8623];
	47 -> 48	 [pos="e,633,540.1 633,575.7 633,567.98 633,558.71 633,550.11"];
	49	 [height=0.5,
		label="%8 = icmp sle i32 %6 , %7",
		pos="633,450",
		width=3.7846];
	48 -> 49	 [pos="e,633,468.1 633,503.7 633,495.98 633,486.71 633,478.11"];
	50	 [height=0.5,
		label="br i1 %8 , label %9 , label %10",
		pos="633,378",
		width=4.2554];
	49 -> 50	 [pos="e,633,396.1 633,431.7 633,423.98 633,414.71 633,406.11"];
	55	 [height=0.5,
		label="%11 = load i32* %sum , align 4",
		pos="633,306",
		width=4.397];
	50 -> 55	 [pos="e,633,324.1 633,359.7 633,351.98 633,342.71 633,334.11"];
	52	 [height=0.5,
		label="call void @A ( i32* %sum, i32* %i )",
		pos="802,738",
		width=4.8449];
	53	 [height=0.5,
		label="br label %5",
		pos="754,666",
		width=1.7596];
	52 -> 53	 [pos="e,765.73,684.1 790.13,719.7 784.5,711.47 777.65,701.48 771.43,692.42"];
	53 -> 47	 [pos="e,662.03,611.8 727.45,649.64 710.83,640.02 689.15,627.49 670.76,616.84"];
	56	 [height=0.5,
		label="%12 = call i32 @printf ( i8* i8* getelementptr ( [10 x i8]* @.str2 ,  i32 0, i32 0 ), i32 %11 )",
		pos="633,234",
		width=12.058];
	55 -> 56	 [pos="e,633,252.1 633,287.7 633,279.98 633,270.71 633,262.11"];
	59	 [height=0.5,
		label="%14 = load i32* %i , align 4",
		pos="633,162",
		width=3.9262];
	56 -> 59	 [pos="e,633,180.1 633,215.7 633,207.98 633,198.71 633,190.11"];
	60	 [height=0.5,
		label="%15 = call i32 @printf ( i8* i8* getelementptr ( [8 x i8]* @.str3 ,  i32 0, i32 0 ), i32 %14 )",
		pos="633,90",
		width=11.893];
	59 -> 60	 [pos="e,633,108.1 633,143.7 633,135.98 633,126.71 633,118.11"];
	63	 [height=0.5,
		label="ret i32 0",
		pos="633,18",
		width=1.3985];
	60 -> 63	 [pos="e,633,36.104 633,71.697 633,63.983 633,54.712 633,46.112"];
}
